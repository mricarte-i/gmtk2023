[gd_scene load_steps=12 format=2]

[ext_resource path="res://addons/kenney_prototype_textures/green/texture_01.png" type="Texture" id=1]
[ext_resource path="res://pieces/S.png" type="Texture" id=2]
[ext_resource path="res://pieces/O.png" type="Texture" id=3]
[ext_resource path="res://reloading.png" type="Texture" id=4]
[ext_resource path="res://InteractiveBox.gd" type="Script" id=5]
[ext_resource path="res://addons/kenney_ui_audio/switch38.wav" type="AudioStream" id=6]

[sub_resource type="BoxShape" id=20]
extents = Vector3( 2, 4, 2 )

[sub_resource type="Shader" id=23]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.2.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}


vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=22]
shader = SubResource( 23 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_blend_sharpness = 1.0
shader_param/uv1_scale = Vector3( 0.5, 0.5, 0.5 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 1 )

[sub_resource type="Shader" id=24]
code = "shader_type spatial;
render_mode unshaded, cull_front, depth_draw_always;

uniform float thickness = 0.1;
uniform vec4 outline_color : hint_color = vec4(1.0);

void vertex() {
	VERTEX += NORMAL * thickness;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=25]
render_priority = -1
shader = SubResource( 24 )
shader_param/thickness = 0.1
shader_param/outline_color = Color( 0.611765, 0.188235, 1, 1 )

[node name="Interactive" type="Area"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7, -1, -7 )
script = ExtResource( 5 )
Preview = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 20 )

[node name="Box" type="CSGBox" parent="."]
use_collision = true
height = 4.0
material = SubResource( 22 )

[node name="outline" type="CSGBox" parent="."]
width = 2.5
height = 4.5
depth = 2.5
material = SubResource( 25 )

[node name="preview" type="Sprite3D" parent="."]
transform = Transform( 6, 0, 0, 0, 6, 0, 0, 0, 1, 0, 3, 0 )
billboard = 1
texture = ExtResource( 3 )

[node name="reload" type="Sprite3D" parent="."]
transform = Transform( 4, 0, 0, 0, 4, 0, 0, 0, 1, 0, 3.3984, 0 )
billboard = 1
texture = ExtResource( 4 )

[node name="Timer" type="Timer" parent="."]
wait_time = 5.0

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )

[connection signal="body_entered" from="." to="." method="_on_Interactive_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_Interactive_body_exited"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
